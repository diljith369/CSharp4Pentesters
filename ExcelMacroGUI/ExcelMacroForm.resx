<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAJUAAACVCAYAAABRorhPAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAGYlJREFUeF7tnQm4XVV1x8nwMpCQMGSChBAIYwADBggkhIQhyBPEhMfLuyF5AxFi
        gBYEFUEQIy2KoEVThFK0tnWiYFu0lgItiIK2grV20NZWbLVS2moHsSKO7e/3uu/7bu47ue8O55w7ZP+/
        7//d++475+xpnb3XXnvttfeIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
        iIiIiIiIiIjYXdDb2zuuUChMhjM3btw4Z9OmTQdt3rx50UUXXXQY34+AR/H92BIugUfCw+AhcBHXH8B1
        +/B9T543Pjw6otOxdevWcTT8FDgTzoWL4RL4coRhFXw13MLfb0BI3sjnTfCX4Tv5/T0lfBd8O9wOr4de
        exncCNfy9zI+FbrFPGcugjptzZo140I2IjoJCNUEGnl/GvwV8Ab4CPwafAH+HP5vSvwBfBahepT03sLn
        2Rs2bJiHYMUerN1BY06A+9DAm+G98KvwRZgkCFnTdL8CPwwvp/eyB5sYshrRyrA3otHUhRyKHKoe51Nh
        eg5+H/4UJjV61vwZ/CH8Dvx7+CR8H/kbQLiWoIdNDkWIaAUMDAyMh+pJZ8Br4W9AhemfYLOEaCw63Cro
        T8PfhW9lqNzQ19c3C8ZhslngLZ9MYyyE6kivg/fDr8MfwaSGbFXai/0nfJgyqfRbngPhnqGoEVmDXmki
        FT6fBjiJzyvhp6ENk9Rg7UZ7sGegs85VcE6hUJgQih6RFRAqle9tCNWT8Md8T2qcdqfC9VfwzQjV3FD0
        iDSBAj5+cHBwOkL0Bir6H2GnClM5fwK/SbmvXr9+fbR3pQVmR/tTqQNU7u9Bldv/gZ0y3FVDJxvfhr8P
        z0OhnxOqJqJWMM3WzrSainw7/FP4PZhU6bsLVeYfg78EV2o+CVUVUQ0QJk0E4tfhP8A0Ld5FOrRoO9Ki
        /hLMIo20aR4d/jXmrle/DFUWsSsw1HXB2VRYL/wstMGTKrdW2hj/BW2QL8On4MPwE/AB+CDUtqVR8i+g
        BkqHWnsHBa8WgXO40qzhco35/2/oc0xfA2waJg+f+0WGwo1wPpwUqjCiFFTSFHqohdBFXRsiLb1Jpf4/
        oKYHh9JXMLTOCsmOYGhoaAJv/r4I9UoaaYjrboXqcX8JFQgbUn2ulP4mHZqLwvM897umqGHz03x/iE+F
        9w+gw5c9rwLXaPkU9B/wfBfAF4ViRJRgHMK0gkr67VBZSZVYL++n0k/u7++fFtKqCep2fX19M8nfSbAH
        9gZeAM/huct5vktDc/i74nILzxoXdMUC16snKphJea6VH+KZK0gizg4FCqfGzH74R9C3PanSamVR93DZ
        xuF0Oo0/nsafCZfCARrhbfy+A74P3gbfxG/9CiBCtB+NP7LgqzAoMHBaGafy3MncYxkUlqoa1Xu5fgF8
        N/xnmFSGWugQrUW+pzTfuyWogElUhr5IfwIdOpIqrB7+LbwRHmQ6fC6k4V8DVfyfgA5pz0Ib9Fvh7z+E
        d3HNW/i8Dr4WnqhADWc2ZSCMLn4fC38VqmsllaMWOsQ7vP4C3P2WeLq7u8dBK1XdJW1zwb/Bu+HRpoVQ
        TOX766FK+Hdh6bXqPr8Jr4eXwF6E6jw+18NXwkOzEipBz9JFGq+Cn4Gl+aqX6nfPUIZtjABdcPcYDrUK
        U5lz4alUwJ/DNH2cnFlpJNwQklOoXNZxtqfZoPz6T8EzBwcHp4TLcwf1oOvyzeQjrYnJTxCqr8LV9IYz
        QjKdDWZX0+BRFN7hJqlSGqFmgCtppBGlHKGaQQUrPKOGGH63l+wlP/qWq0Tn/maTtt4W9oppOxA+QvmO
        27ZtW+e70lDQFdDeJKkiGuXt8JiQ1Ah4Y/VqeBv8a/6/0+yS356H2qoKCmC4JVeQ9nHQ4bm0LGnwIep6
        9fbt2zt3GKSQLrt8EKahmO5EKk+D5WoEZNS03pkfv8+gV3D3y1quex2fd3LPhyR/q8BfyfdDwi25gnSd
        SPhCJJatAaoOPEBZV4ekOgsUzO1O74H/EgqcKmmUG+H8kFwiCoXCRARrL64/kPws4XrNC8fBl/HbYXxm
        Omvq6+ubQTrnwk3kZRaTleGhiT/3hT0wsWwN8t/h3ZT32OFMdApoLCvNKb69SVLBG+HwKn4QkKkhyZaC
        wkOjHk0+nWFqYXe21weHfaXIt7auI/lbS3vaxl+p+cTJwOzhDLUznNLC8RTGjQh6NGbhB6U5wl0qe4Vk
        M4UCQloaURdAezd7vGHyuxtNj4BuNNXKLo/mu0Outq/PwWK+P8A9S8NjdT7cm9986bJw6/HF+zuIJtA/
        AbavjkUhplJxWrRVkLWhJBW4EdoAGi+dPXWFZDMDw5fD5yLSOoNyXQFvgXcXye93wjsQolsl398J74F/
        BncqP/9/CK4Jj7autLLrZ29vVVrGtKjV/Uvk80B1zJBs+4FK08HulrLCpUnXzp5g1paLbxFCdTDpfQS6
        wJyUn1ro5OD48GiFStOCvVmaKwvlVHF3orQwJNte4G2YzVvhwmlWb57UjeWSkGTmoJc6m/Q0pDY6RD1H
        3ZxCHY0M2TzbXvBM/ufewKR70uJLvOiufY7y1GhpaEQk8+oRunxkoXhKnew0ai4OyWYOGn0/0jsFuvHC
        Htg9hi6E64Oly+9YBkyF0ZcMmdo8d2hoaGQYUs/hmfP43zdhVnVWpL5qp9NO7TMMkuFDoLO98rW2NPkN
        qM6SuS5VCtLTW0E3F4NwLOdvey+dCgeh+w/12fotqDFTPabYq7lM5L7EWxEoe/GdhmyFCnbxu0tXWW/s
        0BvEfLaHHxbS7yKp0+U/hkkFSos+vyck2xJAyCbB2fB48mYMB2eluuD8K3wKgXErfkUDK9docshiUlNO
        nQgvRpBbf8s9Q4TKrD5KaTmgJdEeYAdptfSbhgC5g9phUuX4cgRm//CvXYLrdFTMWq+Sqg8fI0+Hh6Rb
        F2T0NfALIeNZUTPC5SHJjgKNfAdlS8Nxrxq6YfWakHRrgq5Um5QOd5nqBFT8R+FpIdmOAuVzKSsvofop
        velnBgYGxuxBmwYyqbekltusZy8qxMNenZ0GyuUGiTyGvyK/hWBdHZJvHWzZsmUcNPSh0emy1KXspfSZ
        Wo8+1XExnSjXMdB4Wmls46qWmkE+zygzwxloyErzQUNPgS8nc8/DrGNCPUxap4akOwKUZxKcC9197EzR
        cvrpwrNKvtSS/9HA34H6pGmncxbsdZ+HRuvzvlrUD0eV75D2aQhV6+x6pvtUl7JC0vZeHEXSuhkeGZJu
        a9C7uzitu7OesG7McImm+FLqlXpxuFRTjR6ze0F3b89GD3IN0mjJK/k8m3svhFfw3Zm3a426GFVr+f8h
        97qzaO+QXPNRKBTcbuQOlqx7Kanf0b4h6baGKgONuYbyfBDhKPehd2ZWs67DPW4omcHzND7r8qLpoPS5
        SVT4vkE7Hhge01yQ+VlQ15akzKZJu+kXaITFutOE5NsSlMNGH6Asj8FdecFqfX9ruKUuMJy57KOJoirH
        SPK0Ae4Xbm8eyMTxUPeOxIymSPUEdYf57bb1SB9x8r2AejLOumqC1mx7EZexdtWTuD3+pvCIuoBQuUht
        qMf3wjGXzBBwfbwOC7c3B8EBzwCuDn2JGU2RP7bQfLb86roLtXAqAnQi+b0IboeuB7rZ0x5IQRrL7PIM
        928Lj6wbLpvxHEM9GrA2KZ1Sag5ayz3NU9h5E1y1vxRmrqDDlxCq7bDl9CkbjvypV7or5hzoJtk3QWdt
        7og2UrJLS0nlSqK98kcQhpUhiYZAb+V6pDuXk9IqpaYMr2teiCIa2G3bvxIylDZ9k4v0bwXXAjd9gyR5
        MELNLD51F3b4N6KwMy+3sOsK49BWr8+V5bXH0MCbSll7enrsrRT2avK0g3YdcXPOHWTALeKfLMlQI7Qy
        fVOkyqtW5dIptkJlw+Xii14Kpu/GajfAx9TgS66RUi8Ep+HqR2kGTdPnXrPJUSH5hrFu3bpiVMJq7FfG
        7Ton3Jo/SNzgGjqVJWWuVqpn6Caiv/cqGs/NBR5KZMMVhc3hJHedirwYu8rgYoaiVoiyck1Rb9SboeJW
        s1rB87SFGVknKc1y2p7NWaxHn3IPm45eNnZS5qqlvdHH4SbeJrcpzaIStN9M1MLLb2fxm8HH7Am+TeMe
        nKdJQYMjeTiNtN28oW+6PWa9Q9uu+CLldXlmHZzH91QdD3mmqx3vgklpl9OR4R3kIX81g4S1AjsbS8rY
        WLRRXqSx7Hl8gwy0Pw+Fd1RsJX73DD5nUBoD7b4vhrn1VuTRoe4+2OjLk0R7Z5dW7I1Ph/Yoqc68rFOe
        af3p8pyUhyQ6U10WHpEfSFQfdGNlJmWqEtWX9LfyzLwVhUJhGgWv2PNwrbubVdKNe3AfXMo9mduq6KU8
        GNKZXHE9Li36cvwN9KW6gjSWJb1QaYDnO5nSAFrLDF33pZHIObmBRK3sWoNK6Bv9KJV4PcJUtWmACp/A
        9VqH7+Tep2EfrCvcYi0gPe1M9iJJZamV9koGJtOo6YaQqxliThoaGspsqz1p2PMZTVA9sDw/lajA5+8O
        Q6LuUVMPSMpUEp0hPYUwXFrPW2nPBI2DoLKsbezQ8K9MQIO7huYMr9YGKaf2KWeybtTwJXwzz56Ttt5U
        DtLRdmbcBk0ctc5MdS+6PTwqP5CocTLdlpSUqSRqde9HMBoOz8zb3QUzjW1Jo/uWu1unoUVynuOuYJdm
        lpPn3EJTk55b8XWHqcXoWqRD5YfDo/IDieqgX21IoB/RQ/XDBfY44REtDfLsBELdIqk8leii95co67vh
        ydDtWNP5PReBYnY8GR5Keg6zzlbrtZ99gll2fhEGHb5I1LWkat9iY5ifjOKb6x69eoEQHIowGAtUHSip
        POU0XI9lVCHewv3GyVqiOQLmto6m8EL9q3TiK91zWA/dKpbfOTi8Ceo2+lInZSaJBmpti/375NOwPobD
        dqqf1CjqhuocX4R6X7pR4WqojclwQU1ZNyPPrsO+GvoypGGcfRTmtw+gv79/Pglqzk/KzChS4FWwdbwK
        dwHyqouKMUKNR6pirc6ohdm1OEMh6bprL+B652VcdwY9kkFxm+rfRfouZgs3r5Y7+9VLh/5MJ0M7gUJo
        N9KNIykzozg4ODg7TyW1XpBXhcohxHMFHcp0zVU3uo7fzoeLYeamjGoQNpvoeqST5FY+dSFO09L/OEN3
        auuPY4KeShcPXTqSMjOKa9asmRgPQEwXChRUDbkLuuEkse4boO37spBc9uBt1Sho5JCkzIwiPdVM9LDW
        2anR5qBONQQLDxdQIc9iCemz9FQnhCSzBwkaTqdqazpCeBSMp5c3CG1zDHWaKbQRevRJFsJUpIbqU0LS
        2QMB8bQGg38lZWYUud7tQ+0VZKvFQD3qBqSrkfbBrA7WLOXnEKpVIfnsgYB4jFppUNSxqOP9weH2iCpB
        PbvJ1Jm2nqXvgM5A8wgzJHMXKoN9VT38kbmvwFMLhULUq6pAb2+v647anfQw8FBy1x93tesmKzr8peIj
        XxUQqmUkWtPJT2TwEoSq/eN45wCEajr15UleumrnLUxFPkk7nxyylD1ITMc1lyWSMrMrfpmK6uX2aFpI
        APVTNLxexafDXC3+T1kw39lff3//QSRa62KrU997EKzhc/gi/h/0Soa6PhJh+kU+nfzop6+LtfXl2YWa
        DdwImrViXs4naKvjQjazBxXgsSAuOCZlphJdT9MNZEF41G4LhMnNpidQF1rvXV6xbjQRaMh0Keha/m/I
        cC35fuqGY4jvvHowV0zy260c3i5diWtdFtCrQV/zy6mw3U6/ooefBOdSfl2xr4QG6HeoK67XGUHPl+58
        6mf/4iqE2+b52z2G10Cvb8jHq0q6tjtvOOM5wfHft6se45v36K6q7Sr3PXx5Y2hoyLqyZ1dl8MQuNyHo
        3VAay8tPfdM+gB6ziJc20QGR/7kJxIOLsjwVQjrU6oWSb/uQoOew1BtG0Er8HhW8ttMFy4V0yuoWL092
        d5tXUn0YsP9pZ32w4kSG63SxeTzclxVtn4/TQ+brfUGiN0Etu0mZqpY/Q6g8xHElldkWDnzVoKenZzq9
        iqsOejkYkKOSO4omA21+S8LtFRH0sF8L92ZFJwg7QpL5gUR1t/B0gqRM1UK3efuc6xEwDwBqS5MDeTdk
        jwHZdNpTyfWYNXvysTafPsq9ngNYleuudcS1jhJJz0qLHux9Q0gyP/DGnE/iBo5NylSttOJ1hnPrkpFd
        dD0ecz9gs0C+3DntxghdgDzdQk9RY3EaUlHnvqQZmm+/7iTO9jzaVi8Pd7pcRXmr9orlegNt1OJ1Ww9d
        ghsMSeYHKtUKtSKTMlUvVeIdLlw0vY40zjUdmLh7OS+sX79e7wDD8SyDryJvHkDg8H8vVL9x1lZp14pR
        YDwcaZDZ334IkU6OCuM6nlfVsCd40dzc+nru05aVlE5adP/ByFmEuYEC7k/CdvVZTW99279AJeqEtpXP
        s2gM18IO4vtc0p9RKBRS9SZ1Cs/zp/H8edBDmzxV9ETT5vslfO6A+m574kS1yyduijDS4OmNnrpO2gYv
        +xhM08OznD7bOs//iBYaQFdWd79meZ5fkRbUrU82qLOoy6jgtQiWthu9H6XboDzdc0+uG5NeF+7x3pk8
        b5++vj6n7Cv4rgDps6Qtzg2zlXqhSvRsvfeTz+VUWaMC5SzS+FcOr0lppUXb86bu7u7mTJxIXEtv1ufQ
        VGLRvuPGBDclGB3G2eS9CM49lcg1Dt0KqbtiHJ5St/2Qzu0IVCphgRAq7Vt5hMHU7JG/PlUElaZflfpP
        UubyooY6A144XPqWeeKEgqbfUSV6ndc73ff+NIdxA4ncQf2ozDd0Aj1C2QUP5zn2mOWbdy27ep27ejwQ
        XD3XCdQN0HVEy1jrmuH95PvMkHz+IANOo106yHuxs1WpYPqm30ADN3yAAEr9RBrY4918cZ3ElNazL4TD
        4VI4vaenZ7w6Jtcb6c/A/W4qNRS5R8NpwXdtsZojXrTY57c1qxwUwjXAC2BVcbpTpruHHbZc7qikuNrQ
        2sIq2YtUuu2x6ll2KtJwQ66XGUKyYYFCKA225mzTwHLlKxeW3UCzIwd7JwEBmwYPt+fheqP0GFTF4Gf2
        bg7/ni5fTkNuNjeuKhnQYS8te1Ut1BvSN9X9edptNKA6ROgqou7h3zoSOj1+P7QRNEq67qgJQB3KqMEG
        sdAZzrNfDG7mRlJ9xbQ56RWgEdNNpTZkcdiUCqq2J00g2p80SJ5H79KwLz5C4ATCY3SdbZZvv3J39P38
        vjZcXjXoBOzN9uX5mjRO4BlOSnYi/5vT6Cy1YZA5h0CPrMh7CPwklXAW+sY4qP3GLd/Gy3wjn9fw9xDf
        DSbWBcdt3brV84kX8fuF/F9TiEPCbfx2AYIwrEx7Hdyb3/Rvcr3O4UNjpT72TgKcDChwCqvf7+O6G7n/
        JJja280zPd1VIS0N/Op3e0NPE+0Ol3YmBgYGHMcd15125ylYuoA0HLy+FUGdHkDZdIHRxlUs79epZ63v
        zT2RIS9QUIN46VjWiE5SK79Lr/PekIWOw7p16yYyVClcxyBkzv48PUt3445ZeK8ICmpvpYKnnpEkAFnQ
        4eBBhp3mH9CTEZjRucY4pR3iUKQOBGoC1KNRr856rc/1UAX5xJCNiE4Eb5UhdrIIFrErNtf6G5E96K1c
        8HTZI6tF5nLqLnNLSL4qkMepcB9neuGnYej2Cz0qZAqzycke/ybDvyOaCFf5debXfpMkBGnTs3/vC2mP
        CU+KQAdbyD23I1RT4Yi/FgI1cXBwULeUVQjVqXweoBki/DuimWAIdHnAhdokIUibHtf2dEh6TCBQxip1
        y75GzEfIq+tkHgSkF6suJa4MuL72ff73NbgFwYpb9ZuNvr4+p77GOs+jt9Iu9izCsjccc6jyGq7XsOhy
        igcF6N2g1VxLvAI1MmwjUM/Bq6JQtQhoFJcYdA3O0pmsSCcGno5a1bQbQTFOgTtSXKoptavZ67nG5vrX
        bVzj8R7LHTLDrRHNBI2is5ubAFwTVHE3HqXTf5c2PgVdIvHkLKnwud7mNnp9o12zc5eOQ1Q1Quk63J0I
        xJ7V9FZhKWYq92ixdheL64Tm8UGe4W+n87kIvSoGaWs10MBaf3XFvZhPnfleCVfy3SWdxfzuQdUL+Ptw
        Po+lEV3QtAe5lE83PzzAdxeNneFVCjKv4NlbLSXNqocqBGsy6fRy37Wk9Vo+XSeMvVKnAyGZTWO7OUAl
        uuISENcYRTgGVouoDgiNvZvuK4kCFajQ2SvGGFgRYwNhMRaBQ2glHevnCJS627nd3d1xxhZRGQiKHqZu
        mTLupSdslvtqF+mC9l0Mg/kF64poX9AL6a/t6VCewaeTnbNJlfhywdLz80aurfqQyoiIosnCncK6EytE
        pUq8s0SHwfNrmQ1GRAyD3mgm1NCqn3ip6622q8f4X4zdHlE7CoWC5yvrIanfuAbTomDpGXpvuCwiojYg
        VF0IkCF23BFT6tftsotHnjS0oTNiN0Vvb+8kBMsTQd2y5daromC5++SILVu2RP0qonZon9q4caMHAhnE
        w42mCpVLPJ7pkt/RrRGdBReMESrXEw1EpkvLC3x/GJ6jR2e4LCKidiBMhhW6EGEyKJm+UjcjVM2LERDR
        Wejv75+vXoVgHRB+iohoDAiVGxq6EKrocx4RERERERERERERERERERERERERERERERERERERERERERER
        EREREdGu2GOP/wNeC2bG7iRHRwAAAABJRU5ErkJggg==
</value>
  </data>
</root>